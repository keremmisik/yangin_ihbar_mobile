import React from "react";
import {
  Modal,
  Pressable,
  ScrollView,
  StyleSheet,
  Text,
  View,
} from "react-native";

const infoData = [
  {
    title: "Proje TanÄ±mÄ±",
    content: `YiSiS, vatandaÅŸlarÄ±n orman/ev yangÄ±nlarÄ±nÄ± mobil uygulama Ã¼zerinden fotoÄŸraf ve konumla bildirebildiÄŸi, bu verilerin gerÃ§ek zamanlÄ± olarak harita Ã¼zerinde gÃ¶rÃ¼ntÃ¼lenebildiÄŸi bir sistemdir. Web uygulamasÄ± sadece harita ve bilgilendirme ekranlarÄ±nÄ± iÃ§erir, mobil uygulama ise kullanÄ±cÄ±larÄ±n aktif olarak ihbar yapabileceÄŸi ve bildirim alabileceÄŸi sistemdir.`,
  },
  {
    title: "Fonksiyonel Gereksinimler",
    content: `- KullanÄ±cÄ±lar mobil uygulamada kayÄ±t olabilir.\n- YangÄ±n gÃ¶rdÃ¼ÄŸÃ¼nde fotoÄŸraf ve konum ile ihbar yapabilir.\n- AnlÄ±k bildirimler alabilir.\n- Harita Ã¼zerinde NASA verileri, mevcut yangÄ±nlar ve itfaiye konumlarÄ± gÃ¶rÃ¼ntÃ¼lenebilir.\n- YangÄ±n ihbarÄ±nÄ±n durumu: "Devam Ediyor / MÃ¼dahale Ediliyor / SÃ¶ndÃ¼rÃ¼ldÃ¼".\n- YangÄ±n Ã¶nleme iÃ§erikleri ve en yakÄ±n itfaiye konumlarÄ± gÃ¶sterilir.\n- AsÄ±lsÄ±z ihbar yapan kullanÄ±cÄ± tespit edilebilir.`,
  },
  {
    title: "Fonksiyonel Olmayan Gereksinimler",
    content: `- Firebase ile anlÄ±k bildirim gÃ¶nderebilmelidir.\n- GerÃ§ek zamanlÄ± konum takibi olmalÄ±dÄ±r.\n- ArayÃ¼z sade ve hÄ±zlÄ± olmalÄ±dÄ±r.\n- Her ihbar loglanmalÄ±, silinmemelidir.\n- AsÄ±lsÄ±z ihbarlar kontrol edilmeli ve Ã¶nlem alÄ±nmalÄ±dÄ±r.\n- Web uygulamasÄ± sadece gÃ¶rÃ¼ntÃ¼leme amaÃ§lÄ±dÄ±r.`,
  },
  {
    title: "KullanÄ±cÄ± Tipleri",
    content: `- VatandaÅŸ: KayÄ±t olur, ihbar yapar, haritayÄ± ve iÃ§erikleri gÃ¶rÃ¼ntÃ¼ler.\n- ZiyaretÃ§i: Web Ã¼zerinden sadece haritayÄ± ve bilgilendirme iÃ§eriklerini gÃ¶rÃ¼ntÃ¼ler.\n- Sistem YÃ¶neticisi (Opsiyonel): Ä°hbarlarÄ± filtreleyebilir, asÄ±lsÄ±z ihbarlarÄ± iÅŸleyebilir.`,
  },
  {
    title: "KVKK & GÃ¼venlik",
    content: `- KullanÄ±cÄ± rÄ±zasÄ± alÄ±nmalÄ± (KVKK uyumu).\n- Konum, e-posta ve telefon ÅŸifreli tutulmalÄ±.\n- Ä°hbarlar zaman damgasÄ± ile kaydedilmeli.\n- AsÄ±lsÄ±z ihbar yapan kullanÄ±cÄ±lar uyarÄ±labilir veya hesap askÄ±ya alÄ±nabilir.`,
  },
];

const Info = ({ visible, onClose }) => {
  return (
    <Modal visible={visible} animationType="fade" transparent>
      <View style={styles.overlay}>
        <View style={styles.container}>
          <Text style={styles.mainTitle}>ðŸ”¥ YangÄ±n Bilgilendirme Sistemi</Text>
          <ScrollView style={styles.scroll}>
            {infoData.map((section, index) => (
              <View key={index} style={styles.card}>
                <Text style={styles.cardTitle}>{section.title}</Text>
                <Text style={styles.cardContent}>{section.content}</Text>
              </View>
            ))}
          </ScrollView>
          <Pressable style={styles.closeButton} onPress={onClose}>
            <Text style={styles.closeText}>Kapat</Text>
          </Pressable>
        </View>
      </View>
    </Modal>
  );
};

export default Info;

const styles = StyleSheet.create({
  overlay: {
    flex: 1,
    backgroundColor: "rgba(0,0,0,0.5)",
    justifyContent: "center",
    alignItems: "center",
  },
  container: {
    width: "90%",
    maxHeight: "80%",
    backgroundColor: "#1e1e1e",
    borderRadius: 12,
    padding: 15,
  },
  mainTitle: {
    color: "#ffc107",
    fontSize: 20,
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: 10,
  },
  scroll: {
    marginBottom: 15,
  },
  card: {
    backgroundColor: "#2a2a2a",
    borderRadius: 10,
    padding: 12,
    marginBottom: 12,
  },
  cardTitle: {
    color: "#fff",
    fontSize: 16,
    fontWeight: "bold",
    marginBottom: 5,
  },
  cardContent: {
    color: "#ccc",
    fontSize: 13,
    lineHeight: 18,
  },
  closeButton: {
    backgroundColor: "#1976d2",
    paddingVertical: 10,
    borderRadius: 8,
  },
  closeText: {
    color: "#fff",
    textAlign: "center",
    fontWeight: "500",
  },
});
